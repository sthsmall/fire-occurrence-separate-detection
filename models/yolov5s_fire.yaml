# Parameters
nc: 2  # number of classes
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.50  # layer channel multiple

anchors:
  - [15.741, 12.595, 29.437, 22.334, 47.344, 41.091]  # for small objects
  - [96.160, 58.683, 141.140, 137.970, 267.880, 118.930]  # for medium objects
  - [299.030, 246.270, 512.880, 192.010, 570.670, 308.110]  # for large objects

# Swin-Transformer-Tiny backbone
backbone:
  # [from, number, module, args]
  # input [b, 1, 640, 640]
  [[-1, 1, PatchEmbed, [96, 4]],  # 0 [b, 96, 160, 160]
   [-1, 1, SwinStage, [96, 2, 3, 7]],  # 1 [b, 96, 160, 160]
   [-1, 1, PatchMerging, [192]],  # 2 [b, 192, 80, 80]
   [-1, 1, SwinStage, [192, 2, 6, 7]],  # 3 --F0-- [b, 192, 80, 80]
   [-1, 1, PatchMerging, [384]],  # 4 [b, 384, 40, 40]
   [-1, 1, SwinStage, [384, 6, 12, 7]],  # 5 --F1-- [b, 384, 40, 40]
   [-1, 1, PatchMerging, [768]],  # 6 [b, 768, 20, 20]
   [-1, 1, SwinStage, [768, 2, 24, 7]],  # 7 --F2-- [b, 768, 20, 20]
  ]

# YOLOv5 v6.0 head
head:
  [[-1, 1, Conv, [512, 1, 1]],  # 0
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 1
   [[-1, 5], 1, Concat, [1]],  # 2 cat backbone P4
   [-1, 3, C3, [512, False]],  # 3

   [-1, 1, Conv, [256, 1, 1]],  # 4
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],  # 5
   [[-1, 3], 1, Concat, [1]],  # 6 cat backbone P3
   [-1, 3, C3, [256, False]],  # 7 (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],  # 8
   [[-1, 6], 1, Concat, [1]],  # 9 cat head P4
   [-1, 3, C3, [512, False]],  # 10 (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],  # 11
   [[-1, 10], 1, Concat, [1]],  # 12 cat head P5
   [-1, 3, C3, [1024, False]],  # 13 (P5/32-large)

   [[7, 10, 13], 1, Detect, [nc, anchors]]  # Detect(P3, P4, P5)
  ]
